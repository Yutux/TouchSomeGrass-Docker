# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: Code Quality - SonarCloud (Multi-Modules)

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  analyze:
    name: Build & Analyze All Services
    runs-on: ubuntu-latest

    steps:
      ##########################################################
      # 1Ô∏è‚É£ Cloner le code
      ##########################################################
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # n√©cessaire pour une analyse compl√®te des diffs Git

      ##########################################################
      # 2Ô∏è‚É£ Installer Java & Maven
      ##########################################################
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      ##########################################################
      # 3Ô∏è‚É£ Cache Maven & Sonar
      ##########################################################
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      ##########################################################
      # üîπ 4Ô∏è‚É£ ANALYSE DU MODULE DirectoryService
      ##########################################################
      - name: Analyze DirectoryService
        working-directory: ./DirectoryService
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -DskipTests clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=yutux_yutux-directoryservice \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      ##########################################################
      # üîπ 5Ô∏è‚É£ ANALYSE DU MODULE jwtAuthService
      ##########################################################
      - name: Analyze jwtAuthService
        working-directory: ./jwtAuthService
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -DskipTests clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=yutux_yutux-jwtauthservice \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      ##########################################################
      # üîπ 6Ô∏è‚É£ ANALYSE DU MODULE cloudGateway
      ##########################################################
      - name: Analyze cloudGateway
        working-directory: ./cloudGateway
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -DskipTests clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=yutux_yutux-cloudgateway \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      ##########################################################
      # üîπ 7Ô∏è‚É£ (Optionnel) V√©rifier le Quality Gate SonarCloud
      ##########################################################
            ##########################################################
      # ‚úÖ QUALITY GATE DirectoryService
      ##########################################################
      - name: SonarCloud Quality Gate - DirectoryService
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          projectKey: yutux_yutux-directoryservice
          organization: ${{ secrets.SONAR_ORG }}

      ##########################################################
      # ‚úÖ QUALITY GATE jwtAuthService
      ##########################################################
      - name: SonarCloud Quality Gate - jwtAuthService
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          projectKey: yutux_yutux-jwtauthservice
          organization: ${{ secrets.SONAR_ORG }}

      ##########################################################
      # ‚úÖ QUALITY GATE cloudGateway
      ##########################################################
      - name: SonarCloud Quality Gate - cloudGateway
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          projectKey: yutux_yutux-cloudgateway
          organization: ${{ secrets.SONAR_ORG }}
